{"ast":null,"code":"var _jsxFileName = \"/Users/sonniewelling/face/my-app/src/App.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport Clarifai from \"clarifai\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\n\n// const app = new Clarifai.App({\n//   apiKey: '6b2b92dccf3a46848eec57512aec544e'\n// })\n\n// Your PAT (Personal Access Token) can be found in the portal under Authentification\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAT = \"c998e70a93f04ff291469ab00f1df1ad\";\n// Specify the correct user_id/app_id pairings\n// Since you're making inferences outside your app's scope\nconst USER_ID = \"5hdnsuctgr7b\";\nconst APP_ID = \"test\";\n// Change these to whatever model and image URL you want to use\nconst MODEL_ID = \"face-detection\";\nconst MODEL_VERSION_ID = \"aa7f35c01e0642fda5cf400f543e7c40\";\nconst IMAGE_URL = \"https://samples.clarifai.com/metro-north.jpg\";\n\n///////////////////////////////////////////////////////////////////////////////////\n// YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n///////////////////////////////////////////////////////////////////////////////////\n\nconst raw = JSON.stringify({\n  user_app_id: {\n    user_id: USER_ID,\n    app_id: APP_ID\n  },\n  inputs: [{\n    data: {\n      image: {\n        url: IMAGE_URL\n      }\n    }\n  }]\n});\nconst requestOptions = {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n    Authorization: \"Key \" + PAT\n  },\n  body: raw\n};\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\n\nfetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log(\"error\", error));\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      console.log(this.state.imageUrl);\n    };\n    this.state = {\n      input: \"\",\n      imageUrl: \"\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        submit: this.onSubmit,\n        onInputChange: this.onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Clarifai","Navigation","ImageLinkForm","Rank","FaceRecognition","jsxDEV","_jsxDEV","PAT","USER_ID","APP_ID","MODEL_ID","MODEL_VERSION_ID","IMAGE_URL","raw","JSON","stringify","user_app_id","user_id","app_id","inputs","data","image","url","requestOptions","method","headers","Accept","Authorization","body","fetch","then","response","text","result","console","log","catch","error","App","constructor","onInputChange","e","setState","input","target","value","onSubmit","imageUrl","state","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","submit"],"sources":["/Users/sonniewelling/face/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Clarifai from \"clarifai\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\n\n// const app = new Clarifai.App({\n//   apiKey: '6b2b92dccf3a46848eec57512aec544e'\n// })\n\n// Your PAT (Personal Access Token) can be found in the portal under Authentification\nconst PAT = \"c998e70a93f04ff291469ab00f1df1ad\";\n// Specify the correct user_id/app_id pairings\n// Since you're making inferences outside your app's scope\nconst USER_ID = \"5hdnsuctgr7b\";\nconst APP_ID = \"test\";\n// Change these to whatever model and image URL you want to use\nconst MODEL_ID = \"face-detection\";\nconst MODEL_VERSION_ID = \"aa7f35c01e0642fda5cf400f543e7c40\";\nconst IMAGE_URL = \"https://samples.clarifai.com/metro-north.jpg\";\n\n///////////////////////////////////////////////////////////////////////////////////\n// YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n///////////////////////////////////////////////////////////////////////////////////\n\nconst raw = JSON.stringify({\n  user_app_id: {\n    user_id: USER_ID,\n    app_id: APP_ID,\n  },\n  inputs: [\n    {\n      data: {\n        image: {\n          url: IMAGE_URL,\n        },\n      },\n    },\n  ],\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n    Authorization: \"Key \" + PAT,\n  },\n  body: raw,\n};\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\n\nfetch(\n  \"https://api.clarifai.com/v2/models/\" +\n    MODEL_ID +\n    \"/versions/\" +\n    MODEL_VERSION_ID +\n    \"/outputs\",\n  requestOptions\n)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.log(\"error\", error));\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n    };\n  }\n  onInputChange = (e) => {\n    this.setState({ input: e.target.value });\n  };\n\n  onSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    console.log(this.state.imageUrl);\n  };\n  render() {\n    return (\n      <div className=\"App text-center\">\n        <Navigation />\n        <Rank />\n        <ImageLinkForm\n          submit={this.onSubmit}\n          onInputChange={this.onInputChange}\n        />\n        <FaceRecognition />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}