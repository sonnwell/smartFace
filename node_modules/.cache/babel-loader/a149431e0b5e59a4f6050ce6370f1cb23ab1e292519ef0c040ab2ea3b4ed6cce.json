{"ast":null,"code":"var _jsxFileName = \"/Users/sonniewelling/face/my-app/src/App.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./components/Signin/Signin\";\nimport Register from \"./components/Register/Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentication\n  const PAT = \"c998e70a93f04ff291469ab00f1df1ad\";\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = \"5hdnsuctgr7b\";\n  const APP_ID = \"test\";\n  // Change these to whatever model and image URL you want to use\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    user_app_id: {\n      user_id: USER_ID,\n      app_id: APP_ID\n    },\n    inputs: [{\n      data: {\n        image: {\n          url: IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Key \" + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      console.log(data);\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById(\"inputImage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n    this.onSubmit = () => {\n      fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(result => this.displayFaceBox(this.calculateFaceLocation(result))).catch(error => console.log(\"error\", error));\n      this.setState({\n        imageUrl: this.state.input\n      });\n      console.log(this.state.input);\n    };\n    this.onRouteChange = route => {\n      if (route === \"signout\") {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === \"home\") {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: \"signin\",\n      isSignedIn: false\n    };\n  }\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), route === \"home\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          submit: this.onSubmit,\n          onInputChange: this.onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"main\", {\n        children: route === \"signin\" ? /*#__PURE__*/_jsxDEV(Signin, {\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Register, {\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","ImageLinkForm","Rank","FaceRecognition","Signin","Register","jsxDEV","_jsxDEV","Fragment","_Fragment","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","user_app_id","user_id","app_id","inputs","data","image","url","requestOptions","method","headers","Accept","Authorization","body","App","constructor","calculateFaceLocation","console","log","clarifaiFace","outputs","regions","region_info","bounding_box","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","e","input","target","value","onSubmit","fetch","state","then","response","json","result","catch","error","onRouteChange","route","isSignedIn","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","submit"],"sources":["/Users/sonniewelling/face/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./components/Signin/Signin\";\nimport Register from \"./components/Register/Register\";\n\nconst returnClarifaiRequestOptions = (imageUrl) => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentication\n  const PAT = \"c998e70a93f04ff291469ab00f1df1ad\";\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = \"5hdnsuctgr7b\";\n  const APP_ID = \"test\";\n  // Change these to whatever model and image URL you want to use\n  const IMAGE_URL = imageUrl;\n\n  const raw = JSON.stringify({\n    user_app_id: {\n      user_id: USER_ID,\n      app_id: APP_ID,\n    },\n    inputs: [\n      {\n        data: {\n          image: {\n            url: IMAGE_URL,\n          },\n        },\n      },\n    ],\n  });\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Key \" + PAT,\n    },\n    body: raw,\n  };\n  return requestOptions;\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: \"signin\",\n      isSignedIn: false,\n    };\n  }\n\n  calculateFaceLocation = (data) => {\n    console.log(data);\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({ box: box });\n  };\n\n  onInputChange = (e) => {\n    this.setState({ input: e.target.value });\n  };\n\n  onSubmit = () => {\n    fetch(\n      \"https://api.clarifai.com/v2/models/face-detection/outputs\",\n      returnClarifaiRequestOptions(this.state.input)\n    )\n      .then((response) => response.json())\n      .then((result) => this.displayFaceBox(this.calculateFaceLocation(result)))\n      .catch((error) => console.log(\"error\", error));\n\n    this.setState({ imageUrl: this.state.input });\n    console.log(this.state.input);\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState({ isSignedIn: false });\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  };\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App text-center\">\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === \"home\" ? (\n          <>\n            <Rank />\n            <ImageLinkForm\n              submit={this.onSubmit}\n              onInputChange={this.onInputChange}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </>\n        ) : (\n          <main>\n            {route === \"signin\" ? (\n              <Signin onRouteChange={this.onRouteChange} />\n            ) : (\n              <Register onRouteChange={this.onRouteChange} />\n            )}\n          </main>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,eAAe,MAAM,8CAA8C;AAC1E,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtD,MAAMC,4BAA4B,GAAIC,QAAQ,IAAK;EACjD;EACA,MAAMC,GAAG,GAAG,kCAAkC;EAC9C;EACA;EACA,MAAMC,OAAO,GAAG,cAAc;EAC9B,MAAMC,MAAM,GAAG,MAAM;EACrB;EACA,MAAMC,SAAS,GAAGJ,QAAQ;EAE1B,MAAMK,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;IACzBC,WAAW,EAAE;MACXC,OAAO,EAAEP,OAAO;MAChBQ,MAAM,EAAEP;IACV,CAAC;IACDQ,MAAM,EAAE,CACN;MACEC,IAAI,EAAE;QACJC,KAAK,EAAE;UACLC,GAAG,EAAEV;QACP;MACF;IACF,CAAC;EAEL,CAAC,CAAC;EAEF,MAAMW,cAAc,GAAG;IACrBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1BC,aAAa,EAAE,MAAM,GAAGlB;IAC1B,CAAC;IACDmB,IAAI,EAAEf;EACR,CAAC;EACD,OAAOU,cAAc;AACvB,CAAC;AAED,MAAMM,GAAG,SAASjC,SAAS,CAAC;EAC1BkC,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAAC,KAUVC,qBAAqB,GAAIX,IAAI,IAAK;MAChCY,OAAO,CAACC,GAAG,CAACb,IAAI,CAAC;MACjB,MAAMc,YAAY,GAChBd,IAAI,CAACe,OAAO,CAAC,CAAC,CAAC,CAACf,IAAI,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW,CAACC,YAAY;MAC1D,MAAMjB,KAAK,GAAGkB,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;MACnD,MAAMC,KAAK,GAAGC,MAAM,CAACrB,KAAK,CAACoB,KAAK,CAAC;MACjC,MAAME,MAAM,GAAGD,MAAM,CAACrB,KAAK,CAACsB,MAAM,CAAC;MACnCX,OAAO,CAACC,GAAG,CAACU,MAAM,CAAC;MACnB,OAAO;QACLC,OAAO,EAAEV,YAAY,CAACW,QAAQ,GAAGJ,KAAK;QACtCK,MAAM,EAAEZ,YAAY,CAACa,OAAO,GAAGJ,MAAM;QACrCK,QAAQ,EAAEP,KAAK,GAAGP,YAAY,CAACe,SAAS,GAAGR,KAAK;QAChDS,SAAS,EAAEhB,YAAY,CAACiB,UAAU,GAAGR;MACvC,CAAC;IACH,CAAC;IAAA,KAEDS,cAAc,GAAIC,GAAG,IAAK;MACxBrB,OAAO,CAACC,GAAG,CAACoB,GAAG,CAAC;MAChB,IAAI,CAACC,QAAQ,CAAC;QAAED,GAAG,EAAEA;MAAI,CAAC,CAAC;IAC7B,CAAC;IAAA,KAEDE,aAAa,GAAIC,CAAC,IAAK;MACrB,IAAI,CAACF,QAAQ,CAAC;QAAEG,KAAK,EAAED,CAAC,CAACE,MAAM,CAACC;MAAM,CAAC,CAAC;IAC1C,CAAC;IAAA,KAEDC,QAAQ,GAAG,MAAM;MACfC,KAAK,CACH,2DAA2D,EAC3DtD,4BAA4B,CAAC,IAAI,CAACuD,KAAK,CAACL,KAAK,CAC/C,CAAC,CACEM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAK,IAAI,CAACd,cAAc,CAAC,IAAI,CAACrB,qBAAqB,CAACmC,MAAM,CAAC,CAAC,CAAC,CACzEC,KAAK,CAAEC,KAAK,IAAKpC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEmC,KAAK,CAAC,CAAC;MAEhD,IAAI,CAACd,QAAQ,CAAC;QAAE9C,QAAQ,EAAE,IAAI,CAACsD,KAAK,CAACL;MAAM,CAAC,CAAC;MAC7CzB,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC6B,KAAK,CAACL,KAAK,CAAC;IAC/B,CAAC;IAAA,KAEDY,aAAa,GAAIC,KAAK,IAAK;MACzB,IAAIA,KAAK,KAAK,SAAS,EAAE;QACvB,IAAI,CAAChB,QAAQ,CAAC;UAAEiB,UAAU,EAAE;QAAM,CAAC,CAAC;MACtC,CAAC,MAAM,IAAID,KAAK,KAAK,MAAM,EAAE;QAC3B,IAAI,CAAChB,QAAQ,CAAC;UAAEiB,UAAU,EAAE;QAAK,CAAC,CAAC;MACrC;MACA,IAAI,CAACjB,QAAQ,CAAC;QAAEgB,KAAK,EAAEA;MAAM,CAAC,CAAC;IACjC,CAAC;IAtDC,IAAI,CAACR,KAAK,GAAG;MACXL,KAAK,EAAE,EAAE;MACTjD,QAAQ,EAAE,EAAE;MACZ6C,GAAG,EAAE,CAAC,CAAC;MACPiB,KAAK,EAAE,QAAQ;MACfC,UAAU,EAAE;IACd,CAAC;EACH;EAiDAC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAED,UAAU;MAAE/D,QAAQ;MAAE8D,KAAK;MAAEjB;IAAI,CAAC,GAAG,IAAI,CAACS,KAAK;IACvD,oBACE1D,OAAA;MAAKqE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BtE,OAAA,CAACP,UAAU;QACT0E,UAAU,EAAEA,UAAW;QACvBF,aAAa,EAAE,IAAI,CAACA;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,EACDR,KAAK,KAAK,MAAM,gBACflE,OAAA,CAAAE,SAAA;QAAAoE,QAAA,gBACEtE,OAAA,CAACL,IAAI;UAAA4E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACR1E,OAAA,CAACN,aAAa;UACZiF,MAAM,EAAE,IAAI,CAACnB,QAAS;UACtBL,aAAa,EAAE,IAAI,CAACA;QAAc;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eACF1E,OAAA,CAACJ,eAAe;UAACqD,GAAG,EAAEA,GAAI;UAAC7C,QAAQ,EAAEA;QAAS;UAAAmE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eACjD,CAAC,gBAEH1E,OAAA;QAAAsE,QAAA,EACGJ,KAAK,KAAK,QAAQ,gBACjBlE,OAAA,CAACH,MAAM;UAACoE,aAAa,EAAE,IAAI,CAACA;QAAc;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAE7C1E,OAAA,CAACF,QAAQ;UAACmE,aAAa,EAAE,IAAI,CAACA;QAAc;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAC/C;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;AACF;AAEA,eAAejD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}