{"ast":null,"code":"var _jsxFileName = \"/Users/sonniewelling/Coding/smartFace/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./components/Signin/Signin\";\nimport Register from \"./components/Register/Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentication\n  const PAT = \"c998e70a93f04ff291469ab00f1df1ad\";\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = \"5hdnsuctgr7b\";\n  const APP_ID = \"test\";\n  // Change these to whatever model and image URL you want to use\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    user_app_id: {\n      user_id: USER_ID,\n      app_id: APP_ID\n    },\n    inputs: [{\n      data: {\n        image: {\n          url: IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Key \" + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nconst App = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [box, setBox] = useState({});\n  const [route, setRoute] = useState(\"signin\");\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  });\n  const loadUser = data => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    });\n  };\n  const calculateFaceLocation = data => {\n    console.log(data);\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: height - clarifaiFace.top_row / height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: width - clarifaiFace.bottom_row * height\n    };\n  };\n  const displayFaceBox = box => {\n    setBox({\n      box: box\n    });\n    console.log(box);\n  };\n  const onInputChange = e => {\n    setInput(e.target.value);\n  };\n  const onSubmit = () => {\n    fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(result => {\n      fetch(\"http://localhost:3000/image\", {\n        method: \"put\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: this.state.user.id\n        })\n      });\n      displayFaceBox(calculateFaceLocation(result));\n    }).catch(error => console.log(\"error\", error));\n    this.setState({\n      imageUrl: this.state.input\n    });\n    console.log(this.state.input);\n  };\n  const onRouteChange = route => {\n    if (route === \"signout\") {\n      this.setState({\n        loggedIn: false\n      });\n    } else if (route === \"home\") {\n      this.setState({\n        loggedIn: true\n      });\n    }\n    this.setState({\n      route: route\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App text-center\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      loggedIn: loggedIn,\n      onRouteChange: onRouteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), route === \"home\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Rank, {\n        name: user.name,\n        entries: user.entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        submit: onSubmit,\n        onInputChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: box,\n        imageUrl: imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"main\", {\n      children: route === \"signin\" ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: loadUser,\n        onRouteChange: onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: loadUser,\n        onRouteChange: onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"s4W/aUoC0TTj0PbPNsMW3Y7rp3E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navigation","ImageLinkForm","Rank","FaceRecognition","Signin","Register","jsxDEV","_jsxDEV","Fragment","_Fragment","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","user_app_id","user_id","app_id","inputs","data","image","url","requestOptions","method","headers","Accept","Authorization","body","App","_s","input","setInput","setImageUrl","box","setBox","route","setRoute","loggedIn","setLoggedIn","user","setUser","id","name","email","entries","joined","loadUser","calculateFaceLocation","console","log","clarifaiFace","outputs","regions","region_info","bounding_box","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","e","target","value","onSubmit","fetch","state","then","response","json","result","catch","error","setState","onRouteChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","submit","_c","$RefreshReg$"],"sources":["/Users/sonniewelling/Coding/smartFace/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./components/Signin/Signin\";\nimport Register from \"./components/Register/Register\";\n\nconst returnClarifaiRequestOptions = (imageUrl) => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentication\n  const PAT = \"c998e70a93f04ff291469ab00f1df1ad\";\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = \"5hdnsuctgr7b\";\n  const APP_ID = \"test\";\n  // Change these to whatever model and image URL you want to use\n  const IMAGE_URL = imageUrl;\n\n  const raw = JSON.stringify({\n    user_app_id: {\n      user_id: USER_ID,\n      app_id: APP_ID,\n    },\n    inputs: [\n      {\n        data: {\n          image: {\n            url: IMAGE_URL,\n          },\n        },\n      },\n    ],\n  });\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Key \" + PAT,\n    },\n    body: raw,\n  };\n  return requestOptions;\n};\n\nconst App = () => {\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [box, setBox] = useState({});\n  const [route, setRoute] = useState(\"signin\");\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\",\n  });\n\n  const loadUser = (data) => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n    });\n  };\n\n  const calculateFaceLocation = (data) => {\n    console.log(data);\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: height - clarifaiFace.top_row / height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: width - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  const displayFaceBox = (box) => {\n    setBox({ box: box })\n    console.log(box);\n  };\n\n  const onInputChange = (e) => {\n    setInput(e.target.value)\n  };\n\n  const onSubmit = () => {\n    fetch(\n      \"https://api.clarifai.com/v2/models/face-detection/outputs\",\n      returnClarifaiRequestOptions(this.state.input)\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        fetch(\"http://localhost:3000/image\", {\n          method: \"put\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            id: this.state.user.id,\n          }),\n        });\n        displayFaceBox(calculateFaceLocation(result));\n      })\n      .catch((error) => console.log(\"error\", error));\n\n    this.setState({ imageUrl: this.state.input });\n    console.log(this.state.input);\n  };\n\n  const onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState({ loggedIn: false });\n    } else if (route === \"home\") {\n      this.setState({ loggedIn: true });\n    }\n    this.setState({ route: route });\n  };\n  return (\n    <div className=\"App text-center\">\n      <Navigation loggedIn={loggedIn} onRouteChange={onRouteChange} />\n      {route === \"home\" ? (\n        <>\n          <Rank name={user.name} entries={user.entries} />\n          <ImageLinkForm submit={onSubmit} onInputChange={onInputChange} />\n          <FaceRecognition box={box} imageUrl={imageUrl} />\n        </>\n      ) : (\n        <main>\n          {route === \"signin\" ? (\n            <Signin loadUser={loadUser} onRouteChange={onRouteChange} />\n          ) : (\n            <Register loadUser={loadUser} onRouteChange={onRouteChange} />\n          )}\n        </main>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}