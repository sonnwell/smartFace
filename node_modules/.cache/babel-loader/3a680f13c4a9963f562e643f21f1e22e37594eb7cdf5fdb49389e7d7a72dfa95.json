{"ast":null,"code":"var _jsxFileName = \"/Users/sonniewelling/Coding/smartFace/src/App.js\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./components/Signin/Signin\";\nimport Register from \"./components/Register/Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentication\n  const PAT = \"c998e70a93f04ff291469ab00f1df1ad\";\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = \"5hdnsuctgr7b\";\n  const APP_ID = \"test\";\n  // Change these to whatever model and image URL you want to use\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    user_app_id: {\n      user_id: USER_ID,\n      app_id: APP_ID\n    },\n    inputs: [{\n      data: {\n        image: {\n          url: IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Key \" + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nconst App = () => {\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     input: \"\",\n  //     imageUrl: \"\",\n  //     box: {},\n  //     route: \"signin\",\n  //     isSignedIn: false,\n  //     user: {\n  //       id: \"\",\n  //       name: \"\",\n  //       email: \"\",\n  //       entries: 0,\n  //       joined: \"\",\n  //     },\n  //   };\n  // }\n\n  const loadUser = data => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    });\n  };\n  const calculateFaceLocation = data => {\n    console.log(data);\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: height - clarifaiFace.top_row / height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: width - clarifaiFace.bottom_row * height\n    };\n  };\n  const displayFaceBox = box => {\n    console.log(box);\n    this.setState({\n      box: box\n    });\n  };\n  const onInputChange = e => {\n    this.setState({\n      input: e.target.value\n    });\n  };\n  const onSubmit = () => {\n    fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(result => {\n      fetch(\"http://localhost:3000/image\", {\n        method: \"put\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: this.state.user.id\n        })\n      });\n      this.displayFaceBox(this.calculateFaceLocation(result));\n    }).catch(error => console.log(\"error\", error));\n    this.setState({\n      imageUrl: this.state.input\n    });\n    console.log(this.state.input);\n  };\n  const onRouteChange = route => {\n    if (route === \"signout\") {\n      this.setState({\n        isSignedIn: false\n      });\n    } else if (route === \"home\") {\n      this.setState({\n        isSignedIn: true\n      });\n    }\n    this.setState({\n      route: route\n    });\n  };\n  const {\n    isSignedIn,\n    imageUrl,\n    route,\n    box\n  } = this.state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App text-center\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), route === \"home\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Rank, {\n        name: this.state.user.name,\n        entries: this.state.user.entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        submit: this.onSubmit,\n        onInputChange: this.onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: box,\n        imageUrl: imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"main\", {\n      children: route === \"signin\" ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 7\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navigation","ImageLinkForm","Rank","FaceRecognition","Signin","Register","jsxDEV","_jsxDEV","Fragment","_Fragment","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","user_app_id","user_id","app_id","inputs","data","image","url","requestOptions","method","headers","Accept","Authorization","body","App","loadUser","setState","user","id","name","email","entries","joined","calculateFaceLocation","console","log","clarifaiFace","outputs","regions","region_info","bounding_box","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","e","input","target","value","onSubmit","fetch","state","then","response","json","result","catch","error","onRouteChange","route","isSignedIn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","submit","_c","$RefreshReg$"],"sources":["/Users/sonniewelling/Coding/smartFace/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./components/Signin/Signin\";\nimport Register from \"./components/Register/Register\";\n\nconst returnClarifaiRequestOptions = (imageUrl) => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentication\n  const PAT = \"c998e70a93f04ff291469ab00f1df1ad\";\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = \"5hdnsuctgr7b\";\n  const APP_ID = \"test\";\n  // Change these to whatever model and image URL you want to use\n  const IMAGE_URL = imageUrl;\n\n  const raw = JSON.stringify({\n    user_app_id: {\n      user_id: USER_ID,\n      app_id: APP_ID,\n    },\n    inputs: [\n      {\n        data: {\n          image: {\n            url: IMAGE_URL,\n          },\n        },\n      },\n    ],\n  });\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Key \" + PAT,\n    },\n    body: raw,\n  };\n  return requestOptions;\n};\n\nconst App = () => {\n\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     input: \"\",\n  //     imageUrl: \"\",\n  //     box: {},\n  //     route: \"signin\",\n  //     isSignedIn: false,\n  //     user: {\n  //       id: \"\",\n  //       name: \"\",\n  //       email: \"\",\n  //       entries: 0,\n  //       joined: \"\",\n  //     },\n  //   };\n  // }\n\n  const loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined,\n      },\n    });\n  };\n\n  const calculateFaceLocation = (data) => {\n    console.log(data);\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: height - clarifaiFace.top_row / height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: width - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  const displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({ box: box });\n  };\n\n  const onInputChange = (e) => {\n    this.setState({ input: e.target.value });\n  };\n\n  const onSubmit = () => {\n    fetch(\n      \"https://api.clarifai.com/v2/models/face-detection/outputs\",\n      returnClarifaiRequestOptions(this.state.input)\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        fetch(\"http://localhost:3000/image\", {\n          method: \"put\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            id: this.state.user.id,\n          }),\n        });\n        this.displayFaceBox(this.calculateFaceLocation(result));\n      })\n      .catch((error) => console.log(\"error\", error));\n\n    this.setState({ imageUrl: this.state.input });\n    console.log(this.state.input);\n  };\n\n  const onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState({ isSignedIn: false });\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  };\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App text-center\">\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === \"home\" ? (\n          <>\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLinkForm\n              submit={this.onSubmit}\n              onInputChange={this.onInputChange}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </>\n        ) : (\n          <main>\n            {route === \"signin\" ? (\n              <Signin\n                loadUser={this.loadUser}\n                onRouteChange={this.onRouteChange}\n              />\n            ) : (\n              <Register\n                loadUser={this.loadUser}\n                onRouteChange={this.onRouteChange}\n              />\n            )}\n          </main>\n        )}\n      </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}