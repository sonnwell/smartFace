{"ast":null,"code":"var _jsxFileName = \"/Users/sonniewelling/face/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [responseJson, setResponseJson] = useState(null);\n  const onInputChange = e => {\n    setInput(e.target.value);\n  };\n  const onSubmit = () => {\n    const PAT = 'YOUR_PAT_HERE';\n    const USER_ID = 'clarifai';\n    const APP_ID = 'main';\n    const MODEL_ID = 'general-image-recognition';\n    const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n      },\n      \"inputs\": [{\n        \"data\": {\n          \"image\": {\n            \"url\": IMAGE_URL\n          }\n        }\n      }]\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + PAT\n      },\n      body: raw\n    };\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", requestOptions).then(response => response.json()) // Parse response as JSON\n    .then(result => {\n      console.log(result);\n      setResponseJson(result); // Update response JSON state\n    }).catch(error => console.log('error', error));\n    setImageUrl(input);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App text-center\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n      submit: onSubmit,\n      onInputChange: onInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(responseJson, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n      imageUrl: imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DNhR1GcunC6DIhKz1YHnOwuEQ9g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navigation","ImageLinkForm","Rank","FaceRecognition","jsxDEV","_jsxDEV","App","_s","input","setInput","imageUrl","setImageUrl","responseJson","setResponseJson","onInputChange","e","target","value","onSubmit","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","json","result","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","submit","_c","$RefreshReg$"],"sources":["/Users/sonniewelling/face/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\n\nconst App = () => {\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [responseJson, setResponseJson] = useState(null);\n\n  \n  const onInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const onSubmit = () => {\n    const PAT = 'YOUR_PAT_HERE';\n    const USER_ID = 'clarifai';\n    const APP_ID = 'main';\n    const MODEL_ID = 'general-image-recognition';\n    const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n      },\n      \"inputs\": [\n        {\n          \"data\": {\n            \"image\": {\n              \"url\": IMAGE_URL\n            }\n          }\n        }\n      ]\n    });\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + PAT\n      },\n      body: raw\n    };\n\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", requestOptions)\n      .then(response => response.json()) // Parse response as JSON\n      .then(result => {\n        console.log(result);\n        setResponseJson(result); // Update response JSON state\n      })\n      .catch(error => console.log('error', error));\n    setImageUrl(input)\n  };\n\n  return (\n    <div className=\"App text-center\">\n      <Navigation />\n      <Rank />\n      <ImageLinkForm submit={onSubmit} onInputChange={onInputChange} />\n      <pre>{JSON.stringify(responseJson, null, 2)}</pre>\n      <FaceRecognition imageUrl={imageUrl} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}