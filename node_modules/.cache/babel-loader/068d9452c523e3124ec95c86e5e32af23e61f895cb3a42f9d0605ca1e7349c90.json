{"ast":null,"code":"var _jsxFileName = \"/Users/sonniewelling/face/my-app/src/App.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./components/Signin/Signin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentication\n  const PAT = \"c998e70a93f04ff291469ab00f1df1ad\";\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = \"5hdnsuctgr7b\";\n  const APP_ID = \"test\";\n  // Change these to whatever model and image URL you want to use\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    user_app_id: {\n      user_id: USER_ID,\n      app_id: APP_ID\n    },\n    inputs: [{\n      data: {\n        image: {\n          url: IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Key \" + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById(\"inputImage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", returnClarifaiRequestOptions(this.state.imageUrl)).then(response => response.json()).then(result => this.displayFaceBox(this.calculateFaceLocation(result))).catch(error => console.log(\"error\", error));\n    };\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: \"signin\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Signin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        submit: this.onSubmit,\n        onInputChange: this.onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: this.state.box,\n        mageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","ImageLinkForm","Rank","FaceRecognition","Signin","jsxDEV","_jsxDEV","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","user_app_id","user_id","app_id","inputs","data","image","url","requestOptions","method","headers","Accept","Authorization","body","App","constructor","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","setState","onInputChange","e","input","target","value","onSubmit","state","fetch","then","response","json","result","catch","error","route","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","submit","mageUrl"],"sources":["/Users/sonniewelling/face/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./components/Signin/Signin\";\n\nconst returnClarifaiRequestOptions = (imageUrl) => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentication\n  const PAT = \"c998e70a93f04ff291469ab00f1df1ad\";\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = \"5hdnsuctgr7b\";\n  const APP_ID = \"test\";\n  // Change these to whatever model and image URL you want to use\n  const IMAGE_URL = imageUrl;\n\n  const raw = JSON.stringify({\n    user_app_id: {\n      user_id: USER_ID,\n      app_id: APP_ID,\n    },\n    inputs: [\n      {\n        data: {\n          image: {\n            url: IMAGE_URL,\n          },\n        },\n      },\n    ],\n  });\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Key \" + PAT,\n    },\n    body: raw,\n  };\n  return requestOptions;\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: \"signin\",\n    };\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({ box: box });\n  };\n\n  onInputChange = (e) => {\n    this.setState({ input: e.target.value });\n  };\n\n  onSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n\n    fetch(\n      \"https://api.clarifai.com/v2/models/face-detection/outputs\",\n      returnClarifaiRequestOptions(this.state.imageUrl)\n    )\n      .then((response) => response.json())\n      .then((result) => this.displayFaceBox(this.calculateFaceLocation(result)))\n      .catch((error) => console.log(\"error\", error));\n  };\n  render() {\n    return (\n      <div className=\"App text-center\">\n        <Navigation />\n        <Signin />\n        <Rank />\n        <ImageLinkForm\n          submit={this.onSubmit}\n          onInputChange={this.onInputChange}\n        />\n        <FaceRecognition box={this.state.box} mageUrl={this.state.imageUrl} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,eAAe,MAAM,8CAA8C;AAC1E,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,4BAA4B,GAAIC,QAAQ,IAAK;EACjD;EACA,MAAMC,GAAG,GAAG,kCAAkC;EAC9C;EACA;EACA,MAAMC,OAAO,GAAG,cAAc;EAC9B,MAAMC,MAAM,GAAG,MAAM;EACrB;EACA,MAAMC,SAAS,GAAGJ,QAAQ;EAE1B,MAAMK,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;IACzBC,WAAW,EAAE;MACXC,OAAO,EAAEP,OAAO;MAChBQ,MAAM,EAAEP;IACV,CAAC;IACDQ,MAAM,EAAE,CACN;MACEC,IAAI,EAAE;QACJC,KAAK,EAAE;UACLC,GAAG,EAAEV;QACP;MACF;IACF,CAAC;EAEL,CAAC,CAAC;EAEF,MAAMW,cAAc,GAAG;IACrBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1BC,aAAa,EAAE,MAAM,GAAGlB;IAC1B,CAAC;IACDmB,IAAI,EAAEf;EACR,CAAC;EACD,OAAOU,cAAc;AACvB,CAAC;AAED,MAAMM,GAAG,SAAS9B,SAAS,CAAC;EAC1B+B,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAAC,KASVC,qBAAqB,GAAIX,IAAI,IAAK;MAChC,MAAMY,YAAY,GAChBZ,IAAI,CAACa,OAAO,CAAC,CAAC,CAAC,CAACb,IAAI,CAACc,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW,CAACC,YAAY;MAC1D,MAAMf,KAAK,GAAGgB,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;MACnD,MAAMC,KAAK,GAAGC,MAAM,CAACnB,KAAK,CAACkB,KAAK,CAAC;MACjC,MAAME,MAAM,GAAGD,MAAM,CAACnB,KAAK,CAACoB,MAAM,CAAC;MACnC,OAAO;QACLC,OAAO,EAAEV,YAAY,CAACW,QAAQ,GAAGJ,KAAK;QACtCK,MAAM,EAAEZ,YAAY,CAACa,OAAO,GAAGJ,MAAM;QACrCK,QAAQ,EAAEP,KAAK,GAAGP,YAAY,CAACe,SAAS,GAAGR,KAAK;QAChDS,SAAS,EAAEP,MAAM,GAAGT,YAAY,CAACiB,UAAU,GAAGR;MAChD,CAAC;IACH,CAAC;IAAA,KAEDS,cAAc,GAAIC,GAAG,IAAK;MACxBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACG,QAAQ,CAAC;QAAEH,GAAG,EAAEA;MAAI,CAAC,CAAC;IAC7B,CAAC;IAAA,KAEDI,aAAa,GAAIC,CAAC,IAAK;MACrB,IAAI,CAACF,QAAQ,CAAC;QAAEG,KAAK,EAAED,CAAC,CAACE,MAAM,CAACC;MAAM,CAAC,CAAC;IAC1C,CAAC;IAAA,KAEDC,QAAQ,GAAG,MAAM;MACf,IAAI,CAACN,QAAQ,CAAC;QAAE9C,QAAQ,EAAE,IAAI,CAACqD,KAAK,CAACJ;MAAM,CAAC,CAAC;MAE7CK,KAAK,CACH,2DAA2D,EAC3DvD,4BAA4B,CAAC,IAAI,CAACsD,KAAK,CAACrD,QAAQ,CAClD,CAAC,CACEuD,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAK,IAAI,CAAChB,cAAc,CAAC,IAAI,CAACnB,qBAAqB,CAACmC,MAAM,CAAC,CAAC,CAAC,CACzEC,KAAK,CAAEC,KAAK,IAAKhB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEe,KAAK,CAAC,CAAC;IAClD,CAAC;IAzCC,IAAI,CAACP,KAAK,GAAG;MACXJ,KAAK,EAAE,EAAE;MACTjD,QAAQ,EAAE,EAAE;MACZ2C,GAAG,EAAE,CAAC,CAAC;MACPkB,KAAK,EAAE;IACT,CAAC;EACH;EAoCAC,MAAMA,CAAA,EAAG;IACP,oBACEhE,OAAA;MAAKiE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BlE,OAAA,CAACN,UAAU;QAAAyE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdtE,OAAA,CAACF,MAAM;QAAAqE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVtE,OAAA,CAACJ,IAAI;QAAAuE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACRtE,OAAA,CAACL,aAAa;QACZ4E,MAAM,EAAE,IAAI,CAACjB,QAAS;QACtBL,aAAa,EAAE,IAAI,CAACA;MAAc;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACFtE,OAAA,CAACH,eAAe;QAACgD,GAAG,EAAE,IAAI,CAACU,KAAK,CAACV,GAAI;QAAC2B,OAAO,EAAE,IAAI,CAACjB,KAAK,CAACrD;MAAS;QAAAiE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAEV;AACF;AAEA,eAAe/C,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}