{"ast":null,"code":"var _jsxFileName = \"/Users/sonniewelling/face/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const onInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleRequest = () => {\n    setImageUrl(input);\n    // Your PAT (Personal Access Token) can be found in the portal under Authentification\n    const PAT = 'ce7067f3d55a4e6d8fa87f4206545d5b';\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = '5hdnsuctgr7b';\n    const APP_ID = 'my-first-application-fugwn';\n    // Change these to whatever model and image URL you want to use\n    const MODEL_ID = 'face-detection';\n\n    ///////////////////////////////////////////////////////////////////////////////////\n    // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n    ///////////////////////////////////////////////////////////////////////////////////\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n      },\n      \"inputs\": [{\n        \"data\": {\n          \"image\": {\n            \"url\": imageUrl\n          }\n        }\n      }]\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + PAT\n      },\n      body: raw\n    };\n\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", requestOptions).then(response => response.json()).then(result => console.log(result)).catch(error => console.log('error', error));\n  };\n  console.log(imageUrl);\n  const onSubmit = () => {\n    handleRequest();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App text-center\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n      submit: onSubmit,\n      onInputChange: onInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n      imageUrl: imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bx7zOCKW54Lce8HPU50bn9PbHZg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navigation","ImageLinkForm","Rank","FaceRecognition","jsxDEV","_jsxDEV","App","_s","input","setInput","imageUrl","setImageUrl","onInputChange","e","target","value","handleRequest","PAT","USER_ID","APP_ID","MODEL_ID","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","json","result","console","log","catch","error","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","submit","_c","$RefreshReg$"],"sources":["/Users/sonniewelling/face/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\n\nconst App = () => {\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  \n  const onInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleRequest = () => {\n    setImageUrl(input);\n    // Your PAT (Personal Access Token) can be found in the portal under Authentification\n    const PAT = 'ce7067f3d55a4e6d8fa87f4206545d5b';\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = '5hdnsuctgr7b';       \n    const APP_ID = 'my-first-application-fugwn';\n    // Change these to whatever model and image URL you want to use\n    const MODEL_ID = 'face-detection';\n\n    ///////////////////////////////////////////////////////////////////////////////////\n    // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n    ///////////////////////////////////////////////////////////////////////////////////\n\n    const raw = JSON.stringify({\n        \"user_app_id\": {\n            \"user_id\": USER_ID,\n            \"app_id\": APP_ID\n        },\n        \"inputs\": [\n            {\n                \"data\": {\n                    \"image\": {\n                        \"url\": imageUrl\n                    }\n                }\n            }\n        ]\n    });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': 'Key ' + PAT\n        },\n        body: raw\n    };\n\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", requestOptions)\n        .then(response => response.json())\n        .then(result => console.log(result))\n        .catch(error => console.log('error', error));\n  }\n  console.log(imageUrl)\n\n  const onSubmit = () => {\n    handleRequest();\n  }\n\n  return (\n    <div className=\"App text-center\">\n      <Navigation />\n      <Rank />\n      <ImageLinkForm submit={onSubmit} onInputChange={onInputChange} />\n      <FaceRecognition imageUrl={imageUrl} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}